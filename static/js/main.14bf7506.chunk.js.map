{"version":3,"sources":["Components/LandingPage.js","Components/AboutMe.js","Components/Contact.js","Components/Resume.js","Components/Projects.js","Components/PrivateRoutes.js","App.js","serviceWorker.js","index.js","profile.png"],"names":["PageLayout","styled","div","StyledImg","img","StyledGridLayout","Grid","StyledBanner","LandingPage","col","src","Logo","alt","Component","AboutMe","Contact","Resume","Project","PrivateRoutes","exact","path","component","Projects","HeaderGradiant","Header","App","className","title","style","textDecoration","color","to","scroll","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"o9BAIA,IAAMA,EAAaC,IAAOC,IAAV,KAKVC,EAAYF,IAAOG,IAAV,KASTC,EAAmBJ,YAAOK,OAAPL,CAAH,KAMhBM,EAAeN,IAAOC,IAAV,KAmCHM,E,iLApBP,OACI,kBAACR,EAAD,KACI,kBAACK,EAAD,KACI,kBAAC,OAAD,CAAMI,IAAK,IACX,kBAACN,EAAD,CACAO,IAAKC,IACLC,IAAI,WAEJ,kBAACL,EAAD,KACI,2D,GAXEM,aCtBXC,E,iLAVP,OACI,6BACI,iD,GAJMD,aCYPE,E,iLAVP,OACI,6BACI,iD,GAJMF,aCYPG,E,iLAVP,OACI,6BACI,gD,GAJKH,aCYNI,E,iLAVP,OACI,6BACI,iD,GAJMJ,a,QCePK,EAVO,kBAClB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWb,IACjC,kBAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,UAAUC,UAAWL,IACvC,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,WAAWC,UAAWN,IACxC,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,YAAYC,UAAWC,IACzC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,WAAWC,UAAWP,M,gOCPhD,IAAMS,EAAiBtB,YAAOuB,SAAPvB,CAAH,KAmCLwB,MA7Bf,WACE,OACE,yBAAKC,UAAU,oBACf,kBAAC,SAAD,KACI,kBAACH,EAAD,CAAgBI,MAAO,kBAAC,IAAD,CAAMC,MAAO,CAACC,eAAgB,OAAQC,MAAO,SAAUC,GAAG,KAA1D,eAAkFC,QAAM,GAC3G,kBAAC,aAAD,KACI,kBAAC,IAAD,CAAMD,GAAG,WAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,WACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,cAGR,kBAAC,SAAD,CAASJ,MAAO,kBAAC,IAAD,CAAMC,MAAO,CAACC,eAAgB,OAAQC,MAAO,SAAUC,GAAG,KAA1D,gBACZ,kBAAC,aAAD,KACI,kBAAC,IAAD,CAAMA,GAAG,WAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,WACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,cAGR,kBAAC,UAAD,KACA,yBAAKL,UAAU,iBACf,kBAAC,EAAD,UCvBYO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,cCXNC,IAASC,OACL,kBAAC,IAAD,KACA,kBAAC,EAAD,OAEEC,SAASC,eAAe,SDsHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,mBEnInBC,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.14bf7506.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Grid, Cell } from 'react-mdl';\r\nimport Logo from \"../profile.png\"\r\nconst PageLayout = styled.div`\r\nwidth: '100%';\r\nmargin: 'auto';\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\nheight: 250px;\r\npadding-top: 5em;\r\ndisplay: block;\r\nmargin-left: auto;\r\nmargin-right: auto;\r\nborder-radius: 95%;\r\n`;\r\n\r\nconst StyledGridLayout = styled(Grid)`\r\nbackground: #bdc3c7;\r\nbackground: -webkit-linear-gradient(to right, #2c3e50, #bdc3c7);\r\nbackground: linear-gradient(to right, #2c3e50, #bdc3c7);\r\n`;\r\n\r\nconst StyledBanner = styled.div`\r\nbackground-color: black;\r\nopacity: .8;\r\nwidth: 75%;\r\nmargin: auto;\r\nborder-radius: 10px;\r\nfont-size: 66px;\r\nfont-weight: bold;\r\ncolor: white;\r\ntext-align: center;\r\n`;\r\n\r\n\r\nclass LandingPage extends Component {\r\n    render(){\r\n        return(\r\n            <PageLayout>\r\n                <StyledGridLayout>\r\n                    <Cell col={12}>\r\n                    <StyledImg\r\n                    src={Logo}\r\n                    alt=\"avatar\"\r\n                    />\r\n                    <StyledBanner>\r\n                        <h1>\r\n                        Full Stack Engineer\r\n                        </h1>\r\n                    </StyledBanner>\r\n                    </Cell>\r\n                </StyledGridLayout>\r\n            </PageLayout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LandingPage;","import React, { Component } from 'react';\r\n\r\n\r\nclass AboutMe extends Component {\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>\r\n                    AboutMe Page\r\n                </h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AboutMe;","import React, { Component } from 'react';\r\n\r\n\r\nclass Contact extends Component {\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>\r\n                    Contact Page\r\n                </h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\n\r\n\r\nclass Resume extends Component {\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>\r\n                    Resume Page\r\n                </h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resume;","import React, { Component } from 'react';\r\n\r\n\r\nclass Project extends Component {\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>\r\n                    Project Page\r\n                </h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Project;","import React from 'react';\r\nimport LandingPage from './LandingPage';\r\nimport AboutMe from './AboutMe';\r\nimport Contact from './Contact';\r\nimport Resume from './Resume';\r\nimport Projects from './Projects';\r\n\r\nimport { Switch, Route } from 'react-router-dom'\r\nconst PrivateRoutes = () => (\r\n    <Switch>\r\n        <Route exact path=\"/\" component={LandingPage} />\r\n        <Route exact path=\"/Resume\" component={Resume} />\r\n        <Route exact path=\"/Contact\" component={Contact} />\r\n        <Route exact path=\"/Projects\" component={Projects} />\r\n        <Route exact path=\"/AboutMe\" component={AboutMe} />\r\n    </Switch>\r\n)\r\n\r\nexport default PrivateRoutes;","import React from 'react';\r\nimport './App.css';\r\nimport { Layout, Header, Navigation, Drawer, Content } from 'react-mdl'\r\nimport PrivateRoutes from './Components/PrivateRoutes';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst HeaderGradiant = styled(Header)`\r\nbackground: #bdc3c7;\r\nbackground: -webkit-linear-gradient(to right, #2c3e50, #bdc3c7);\r\nbackground: linear-gradient(to right, #2c3e50, #bdc3c7);\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"demo-big-content\">\r\n    <Layout>\r\n        <HeaderGradiant title={<Link style={{textDecoration: 'none', color: 'white'}} to=\"/\">MyPortfolio</Link>} scroll>\r\n            <Navigation>\r\n                <Link to=\"/Resume\">Resume</Link>\r\n                <Link to=\"/AboutMe\">About me</Link>\r\n                <Link to=\"/Contact\">Contact</Link>\r\n                <Link to=\"/Projects\">Projects</Link>\r\n            </Navigation>\r\n        </HeaderGradiant>\r\n        <Drawer  title={<Link style={{textDecoration: 'none', color: 'black'}} to=\"/\">MyPortfolio</Link>}>\r\n            <Navigation>\r\n                <Link to=\"/Resume\">Resume</Link>\r\n                <Link to=\"/AboutMe\">About Me</Link>\r\n                <Link to=\"/Contact\">Contact</Link>\r\n                <Link to=\"/Projects\">Projects</Link>\r\n            </Navigation>\r\n        </Drawer>\r\n        <Content>\r\n        <div className=\"page-content\" />\r\n        <PrivateRoutes/>\r\n        </Content>\r\n    </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'react-mdl/extra/material.css';\r\nimport 'react-mdl/extra/material.js';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n    , document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n\r\n// import React from 'react';\r\n// // import ReactDOM from 'react-dom';\r\n// import { HashRouter, Route, Switch } from \"react-router-dom\"\r\n// import './index.css';\r\n// import App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\n\r\n// export default () => (\r\n//     <HashRouter>\r\n//         <Switch>\r\n//             <Route exact path=\"/\" component={App} />\r\n//         </Switch>\r\n//     </HashRouter>\r\n// )\r\n\r\n// serviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/profile.d60e2ec5.png\";"],"sourceRoot":""}